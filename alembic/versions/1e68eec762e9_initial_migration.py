"""Initial migration

Revision ID: 1e68eec762e9
Revises: 
Create Date: 2024-06-16 20:20:21.202411

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1e68eec762e9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None
from sqlalchemy.dialects import postgresql


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('choices', 'id',
                    type_=postgresql.UUID(as_uuid=True),
                    postgresql_using='id::uuid')
    op.alter_column('questions', 'id',
                    type_=postgresql.UUID(as_uuid=True),
                    postgresql_using='id::uuid')
    op.alter_column('users', 'id',
                    existing_type=sa.INTEGER(),
                    type_=postgresql.UUID(as_uuid=True),
                    postgresql_using='id::uuid',
                    existing_nullable=False)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('questions', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('questions_id_seq'::regclass)"))
    op.alter_column('choices', 'question_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('choices', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    # ### end Alembic commands ###
